name: CI

on:
  push:
    branches:
    - main
    - v2
  pull_request:
    branches:
    - main
    - v2

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Local Maven Repo
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: maven-${{ hashFiles('pom.xml') }}

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java
        queries: security-and-quality

    - name: Build
      run: mvn -B verify

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  release:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3

    - name: Release
      uses: qcastel/github-actions-maven-release@v1.12.41
      with:
        release-branch-name: "main"
        access-token: ${{ secrets.GITHUB_TOKEN }}
        maven-args: "-DskipTests -DskipITs"
        maven-repo-server-id: github
        maven-repo-server-username: ${{ github.actor }}
        maven-repo-server-password: ${{ secrets.GITHUB_TOKEN }}
      env:
        JAVA_HOME: /usr/lib/jvm/java-17-openjdk/

  release-v2:
    needs: build
    if: github.ref == 'refs/heads/v2'
    runs-on: ubuntu-22.04

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3

    - name: Release
      uses: qcastel/github-actions-maven-release@v1.12.41
      with:
        release-branch-name: "v2"
        version-patch: false
        access-token: ${{ secrets.GITHUB_TOKEN }}
        maven-args: "-DskipTests -DskipITs"
        maven-repo-server-id: github
        maven-repo-server-username: ${{ github.actor }}
        maven-repo-server-password: ${{ secrets.GITHUB_TOKEN }}
      env:
        JAVA_HOME: /usr/lib/jvm/java-17-openjdk/
